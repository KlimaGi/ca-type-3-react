08-30
Perskaityti:
  ** https://reactjs.org/docs/hello-world.html
  ** https://reactjs.org/docs/introducing-jsx.html
  ** https://reactjs.org/docs/rendering-elements.html
  ** https://reactjs.org/docs/components-and-props.html

Peržiūrėti:
  * 0:00:00 - 0:36:00
    ** https://www.youtube.com/watch?v=Ke90Tje7VS0&t=2143s&ab_channel=ProgrammingwithMosh 
  
NAUDOJANT PAMOKOS PROJEKTĄ IR TYPESCRIPT:
  Pasidaryti žiūrint:
    ** https://www.youtube.com/watch?v=pnhO8UaCgxg&list=PL4cUxeGkcC9gZD-Tvwfod2gaISzfRiP9d&index=4&ab_channel=TheNetNinja
    ** https://www.youtube.com/watch?v=0sSYmRImgRY&list=PL4cUxeGkcC9gZD-Tvwfod2gaISzfRiP9d&index=5&ab_channel=TheNetNinja


08-31
    19 min - perziureti
    ** https://www.youtube.com/watch?v=Zz6eOVaaelI&t=1s

17 min - atlikti ptitaikius react - sukurti nauja projekta, naudojant stiliaus modulio failus (simple-hero-r1)
    ** https://www.youtube.com/watch?v=fs923Mu5EXY
    ** https://codepen.io/Web_Cifar/pen/oNzPXRY

09-01
 Perskaityti:
    ** https://reactjs.org/docs/state-and-lifecycle.html

  Peržiūrėti:
   ** https://www.youtube.com/watch?v=O6P86uwfdR0&ab_channel=WebDevSimplified

  
  Skurkite naują React-TS projektą ir perdarykite šį puslapį naudojant stiliaus modulio failus:
    https://www.youtube.com/watch?v=hVdTQWASliE&ab_channel=TraversyMedia
    https://codepen.io/bradtraversy/pen/XerXYV


9-02:
  Perskaityti:
  **  https://reactjs.org/docs/handling-events.html
  **  https://reactjs.org/docs/forms.html
  ** https://reactjs.org/docs/conditional-rendering.html

  Peržiūrėti:
  ** https://www.youtube.com/watch?v=IkMND33x0qQ&ab_channel=TheNetNinja
  **  https://www.youtube.com/watch?v=4oCVDkb_EIs&ab_channel=WebDevSurvivalGuide


  Išskaidykite pamokos '85 - useState example': <CounterExample> komponentą smulkesniais 
  komponentais ir pritaikykite stilius naudojant ***.module.scss failus:
    * <Input ... />
    * <Button ... />


9-05:
  Perskaityti:
  **  https://reactjs.org/docs/lifting-state-up.html
  **  https://reactjs.org/docs/composition-vs-inheritance.html

React elements like <Contacts /> and <Chat /> are just objects, so you can
-- pass them as props -- like any other data. This approach may remind you of “slots” in other libraries but there are no limitations on what you can
 pass as props in React.

 function App() {
  return (
    <SplitPane left={<Contacts />} right={<Chat/>} />
  );
}

--Specialization: In React, this is also achieved by composition, where a more “specific” component renders a more “generic” one and configures it with props.
Props and composition give you all the flexibility you need to customize a component’s look and behavior in an explicit and safe way.

  ** https://reactjs.org/docs/thinking-in-react.html

  Peržiūrėti:
    https://www.youtube.com/watch?v=w7ejDZ8SWv8&t=5885s&ab_channel=TraversyMedia

  Kas planuoja įsidarbinti per pusę metų:
    Pabandyti padaryti naudojant TypeScript

    _________________
    09-06:
  Peržiūrėti ir pasidaryti naujam projekte:
    https://www.youtube.com/watch?v=fzxEECHnsvU&ab_channel=LamaDev

    09-06 
    CustomSizeCheckbox - pasigilinti
    https://mui.com/system/styled/

    09-07:
  Persižiūrėti ir pasitestuoti savame projekte arba naudojant https://stackblitz.com/run?file=demo.tsx: 
    https://www.youtube.com/watch?v=r42jcDXSFM0&list=PLC3y8-rFHvwh-K9mDlrrcDywl7CeVL2rO&index=3&ab_channel=Codevolution
      privaloma: 3-10
      rekomenduojama: 3-13